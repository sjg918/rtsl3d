
mosaic --
영역에 "걸치는" 객체가 문제
단순하게 bev로 생각 -> bev상에서 점이 두개이상걸치면합격/한개이하라면불합격

그럼 영역 넘어에 있는 점들은 어떻게하나?
1. 객체내의모든점들을저장
2. 전체클라우드에서객체내의모든점들을삭제
3. 전체클라우드를 모자이크
4. 전체클라우드에 (1.)의 점들을 붙임

그러나 위의 방법대로 하게되면 비효율적임 왜냐?
"걸치는" 물체가 다른 모자이크 영역의 객체를 침범할 수 있음
따라서 "걸치는" 물체들이 다른 모자이크 영역의 객체와 겹치는지 알아내야함
IOU가 0.05, 즉 5퍼센트라도 존재한다면 어려움, 그 이하는 봐줄만함
다행히 3d가아닌 bev임

전체프로세스는 아래로 구성
1. 모든 "걸치는" 객체를 찾음
2. bev상에서 점이 한개이하로 걸친다면 불합격
3. 모든 "걸치는" 객체가 다른 모든 객체에 대해 IOU를 0.05이상 가지는지 검사
4. IOU를 0.05이상 가지는 모든 "걸치는" 객체는 불합격
5. 합격된 모든 "걸치는" 객체내의 모든 점들을 저장
6. 전체클라우드에서 모든 "걸치는" 객체의 모든 점들을 삭제
7. 전체클라우드를 모자이크
8. 전체클라우드에 (5.)의 점들을 붙임
--

mixup --
다른 객체와 겹칠 수 있음
이걸 체크하는게 매우 매우매우 귀찮음
mosaic에서 객체가 존재하지 않는 영역을 알수있음
그 영역에 객체를 붙여넣기로함

전체프로세스는 아래로 구성
1. mosaic에 객체가없는 영역을 찾음
2. 없으면 때려침
3. 영역중 하나에 객체를 넣기로함. 랜덤 좌표.
4. 그 곳에 잇는 모든 점을 지움
5. 그리고 객체를 집어넣으면 완성
--

print(rx, ry)
        for object in labels:
            if object is None:
                continue
            else:
                for o in object:
                    print(o.velox, o.veloy, o.veloz)
        print('----------------------------------')
